/**
 * This class is generated by jOOQ
 */
package DBAdapter.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TweetsSturm extends org.jooq.impl.TableImpl<DBAdapter.tables.records.TweetsSturmRecord> {

	private static final long serialVersionUID = 786203877;

	/**
	 * The singleton instance of <code>MI_WS1314.tweets_sturm</code>
	 */
	public static final DBAdapter.tables.TweetsSturm TWEETS_STURM = new DBAdapter.tables.TweetsSturm();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<DBAdapter.tables.records.TweetsSturmRecord> getRecordType() {
		return DBAdapter.tables.records.TweetsSturmRecord.class;
	}

	/**
	 * The column <code>MI_WS1314.tweets_sturm.id</code>. 
	 */
	public final org.jooq.TableField<DBAdapter.tables.records.TweetsSturmRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>MI_WS1314.tweets_sturm.iteration</code>. 
	 */
	public final org.jooq.TableField<DBAdapter.tables.records.TweetsSturmRecord, java.lang.Integer> ITERATION = createField("iteration", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>MI_WS1314.tweets_sturm.text</code>. 
	 */
	public final org.jooq.TableField<DBAdapter.tables.records.TweetsSturmRecord, java.lang.String> TEXT = createField("text", org.jooq.impl.SQLDataType.VARCHAR.length(150), this);

	/**
	 * The column <code>MI_WS1314.tweets_sturm.hashtags</code>. 
	 */
	public final org.jooq.TableField<DBAdapter.tables.records.TweetsSturmRecord, java.lang.String> HASHTAGS = createField("hashtags", org.jooq.impl.SQLDataType.VARCHAR.length(150), this);

	/**
	 * The column <code>MI_WS1314.tweets_sturm.author</code>. 
	 */
	public final org.jooq.TableField<DBAdapter.tables.records.TweetsSturmRecord, java.lang.String> AUTHOR = createField("author", org.jooq.impl.SQLDataType.VARCHAR.length(50), this);

	/**
	 * The column <code>MI_WS1314.tweets_sturm.retweets</code>. 
	 */
	public final org.jooq.TableField<DBAdapter.tables.records.TweetsSturmRecord, java.lang.Integer> RETWEETS = createField("retweets", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>MI_WS1314.tweets_sturm.timestamp</code>. 
	 */
	public final org.jooq.TableField<DBAdapter.tables.records.TweetsSturmRecord, java.sql.Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>MI_WS1314.tweets_sturm.follower</code>. 
	 */
	public final org.jooq.TableField<DBAdapter.tables.records.TweetsSturmRecord, java.lang.Integer> FOLLOWER = createField("follower", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>MI_WS1314.tweets_sturm.geolocation</code>. 
	 */
	public final org.jooq.TableField<DBAdapter.tables.records.TweetsSturmRecord, java.lang.String> GEOLOCATION = createField("geolocation", org.jooq.impl.SQLDataType.VARCHAR.length(200), this);

	/**
	 * The column <code>MI_WS1314.tweets_sturm.place</code>. 
	 */
	public final org.jooq.TableField<DBAdapter.tables.records.TweetsSturmRecord, java.lang.String> PLACE = createField("place", org.jooq.impl.SQLDataType.VARCHAR.length(200), this);

	/**
	 * The column <code>MI_WS1314.tweets_sturm.commentRef</code>. 
	 */
	public final org.jooq.TableField<DBAdapter.tables.records.TweetsSturmRecord, java.lang.Long> COMMENTREF = createField("commentRef", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * Create a <code>MI_WS1314.tweets_sturm</code> table reference
	 */
	public TweetsSturm() {
		super("tweets_sturm", DBAdapter.MiWs1314.MI_WS1314);
	}

	/**
	 * Create an aliased <code>MI_WS1314.tweets_sturm</code> table reference
	 */
	public TweetsSturm(java.lang.String alias) {
		super(alias, DBAdapter.MiWs1314.MI_WS1314, DBAdapter.tables.TweetsSturm.TWEETS_STURM);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<DBAdapter.tables.records.TweetsSturmRecord> getPrimaryKey() {
		return DBAdapter.Keys.KEY_TWEETS_STURM_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<DBAdapter.tables.records.TweetsSturmRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<DBAdapter.tables.records.TweetsSturmRecord>>asList(DBAdapter.Keys.KEY_TWEETS_STURM_PRIMARY, DBAdapter.Keys.KEY_TWEETS_STURM_ID_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DBAdapter.tables.TweetsSturm as(java.lang.String alias) {
		return new DBAdapter.tables.TweetsSturm(alias);
	}
}
