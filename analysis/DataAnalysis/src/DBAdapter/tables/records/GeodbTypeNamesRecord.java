/**
 * This class is generated by jOOQ
 */
package DBAdapter.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GeodbTypeNamesRecord extends org.jooq.impl.TableRecordImpl<DBAdapter.tables.records.GeodbTypeNamesRecord> implements org.jooq.Record3<java.lang.Integer, java.lang.String, java.lang.String> {

	private static final long serialVersionUID = -344180401;

	/**
	 * Setter for <code>MI_WS1314.geodb_type_names.type_id</code>. 
	 */
	public void setTypeId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>MI_WS1314.geodb_type_names.type_id</code>. 
	 */
	public java.lang.Integer getTypeId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>MI_WS1314.geodb_type_names.type_locale</code>. 
	 */
	public void setTypeLocale(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>MI_WS1314.geodb_type_names.type_locale</code>. 
	 */
	public java.lang.String getTypeLocale() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>MI_WS1314.geodb_type_names.name</code>. 
	 */
	public void setName(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>MI_WS1314.geodb_type_names.name</code>. 
	 */
	public java.lang.String getName() {
		return (java.lang.String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.lang.Integer, java.lang.String, java.lang.String> fieldsRow() {
		return (org.jooq.Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.lang.Integer, java.lang.String, java.lang.String> valuesRow() {
		return (org.jooq.Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return DBAdapter.tables.GeodbTypeNames.GEODB_TYPE_NAMES.TYPE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return DBAdapter.tables.GeodbTypeNames.GEODB_TYPE_NAMES.TYPE_LOCALE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return DBAdapter.tables.GeodbTypeNames.GEODB_TYPE_NAMES.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getTypeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getTypeLocale();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getName();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached GeodbTypeNamesRecord
	 */
	public GeodbTypeNamesRecord() {
		super(DBAdapter.tables.GeodbTypeNames.GEODB_TYPE_NAMES);
	}

	/**
	 * Create a detached, initialised GeodbTypeNamesRecord
	 */
	public GeodbTypeNamesRecord(java.lang.Integer typeId, java.lang.String typeLocale, java.lang.String name) {
		super(DBAdapter.tables.GeodbTypeNames.GEODB_TYPE_NAMES);

		setValue(0, typeId);
		setValue(1, typeLocale);
		setValue(2, name);
	}
}
