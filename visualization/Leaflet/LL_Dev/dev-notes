Was muß die Liste können?

- Einfügen
   - wo?
       --> HEAD / TAIL
       --> Vor/nach irgendeinem Element
            --> wie wird das angegeben?  
         
            


- Finden





- Löschen: Zeiger umlenken
  ************************
  
  Zeiger-Situationen      Auszuführende Aktionen
  -----+------+-----      ---------------------------------------
  prev | curr | next      prev.next -> next  &  next.prev -> prev
  null | curr | next      next.prev -> null  &  HEAD -> next
  prev | curr | null      prev.next -> null  &  TAIL -> prev
  null | curr | null      HEAD -> null       &  TAIL -> null
  
  - da Zugriff auf die Listenzeiger benötigt wird, sollte der Löschzugriff über die Liste selbst geschehen
  - infolgedessen können die Elements-Zeiger öffentlich werden - so wird eine weitere SET-Methode erspart
  - die Liste muß also das zu löschende Element bekommen und kümmert sich dann um den Rest
    --> dann muß der Nutzer aber Zugriff auf das Listenelement haben und könnte so auch selbst die Zeiger ändern
        ==> Listenelement muß unsichtbar bleiben
    --> um das Element zu identifizieren, wird entweder der Schlüssel oder die Objektreferenz benötigt 
        - Schlüssel = Binäre Suche im Optimum, andernfalls linear
        - Datenobjekt immer linear
        - Idealerweise gibt es eine Zuordnung Datenobjekt -> Listenelement in der Listenklasse
        - Wird die Objektreferenz oder der Schlüssel genutzt? 
          --> Schlüssel macht mehr Sinn (assoziatives Array mit Referenzen wird nichts)
          
    ==> Zugriffszeiten = 1 mit dem Array, Dereferenzierung bei Abruf- und Löschoperationen über die Schlüssel        
